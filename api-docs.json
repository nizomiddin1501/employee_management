// 20240929190244
// http://localhost:8080/v3/api-docs

{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/regions/{id}": {
      "get": {
        "tags": [
          "region-controller"
        ],
        "summary": "Get Region by ID",
        "description": "Retrieve a region by their unique identifier.",
        "operationId": "getRegionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the region.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "404": {
            "description": "Region not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "region-controller"
        ],
        "summary": "Update region",
        "description": "Update the details of an existing region.",
        "operationId": "updateRegion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Region updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "404": {
            "description": "Region not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "region-controller"
        ],
        "summary": "Delete Region",
        "description": "Delete a region by its ID.",
        "operationId": "deleteRegion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Region deleted successfully."
          },
          "404": {
            "description": "Region not found."
          }
        }
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Get Organization by ID",
        "description": "Retrieve an organization by their unique identifier.",
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the organization.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Update organization",
        "description": "Update the details of an existing organization.",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Delete Organization",
        "description": "Delete an organization by its ID.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organization deleted successfully."
          },
          "404": {
            "description": "Organization not found."
          }
        }
      }
    },
    "/api/employees/{id}": {
      "get": {
        "tags": [
          "employee-controller"
        ],
        "summary": "Get Employee by ID",
        "description": "Retrieve an employee by their unique identifier.",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the employee.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "employee-controller"
        ],
        "summary": "Update an existing Employee",
        "description": "Update the details of an existing employee.",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "employee-controller"
        ],
        "summary": "Delete Employee",
        "description": "Delete an employee by its ID.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted successfully."
          },
          "404": {
            "description": "Employee not found."
          }
        }
      }
    },
    "/api/calculations/{id}": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get Calculation by ID",
        "description": "Retrieve a calculation by their unique identifier.",
        "operationId": "getCalculationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the calculation.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationTable"
                }
              }
            }
          },
          "404": {
            "description": "Calculation not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationTable"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Update a calculation table entry",
        "description": "Update the details of an existing Calculation.",
        "operationId": "updateCalculation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculationTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Calculation table updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationTable"
                }
              }
            }
          },
          "404": {
            "description": "Calculation table not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationTable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Delete Calculation",
        "description": "Delete a calculation by its ID.",
        "operationId": "deleteCalculation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Calculation deleted successfully."
          },
          "404": {
            "description": "Calculation not found."
          }
        }
      }
    },
    "/api/regions": {
      "get": {
        "tags": [
          "region-controller"
        ],
        "summary": "Get all Regions",
        "description": "Retrieve a list of all regions.",
        "operationId": "getAllRegions",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of regions.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "region-controller"
        ],
        "summary": "Create a new Region",
        "description": "Create a new region record.",
        "operationId": "createRegion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Region created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Get all Organizations",
        "description": "Retrieve a list of all organizations.",
        "operationId": "getAllOrganizations",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of organizations.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization-controller"
        ],
        "summary": "Create a new Organization",
        "description": "Create a new organization record.",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Organization created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/api/employees": {
      "get": {
        "tags": [
          "employee-controller"
        ],
        "summary": "Get all Employees",
        "description": "Retrieve a list of all employees.",
        "operationId": "getAllEmployees",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of employees.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "employee-controller"
        ],
        "summary": "Create a new Employee",
        "description": "Create a new employee record.",
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Employee created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/api/calculations": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get all Calculations",
        "description": "Retrieve a list of all calculations.",
        "operationId": "getAllCalculations",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of calculations.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculationTable"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Create a new Calculation",
        "description": "Create a new calculation record.",
        "operationId": "createCalculation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculationTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Calculation created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationTable"
                }
              }
            }
          }
        }
      }
    },
    "/api/calculations/reports/salaries-vacations": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get employees with salaries and vacations",
        "description": "Returns a list of employees who received both salary and vacation payments in the specified month.",
        "operationId": "getEmployeesWithSalariesAndVacations",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/calculations/reports/region": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get employees by region",
        "description": "Returns a list of employees who worked in different regions during the specified month.",
        "operationId": "getEmployeesByRegion",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for the provided parameters",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/calculations/reports/high-salary": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get employees with higher salary than the specified threshold",
        "description": "Returns a list of employees who earned more than a specified threshold in the given month.",
        "operationId": "getEmployeesWithHigherSalary",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for the provided parameters",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/calculations/reports/average-salary": {
      "get": {
        "tags": [
          "calculation-table-controller"
        ],
        "summary": "Get average salary for organization",
        "description": "Returns the average salary of employees in a given organization for the specified month.",
        "operationId": "getAverageSalaryByOrganization",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization or data not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Region": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the region",
            "example": "Tashkent"
          }
        },
        "description": "Region entity"
      },
      "Organization": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the organization",
            "example": "Zero:One Group"
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "parent": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "description": "Organization entity"
      },
      "Employee": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Employee's first name",
            "example": "Nizomiddin"
          },
          "lastName": {
            "type": "string",
            "description": "Employee's last name",
            "example": "Mirzanazarov"
          },
          "pinfl": {
            "type": "string",
            "description": "Employee's personal identification number (PINFL)",
            "example": "12345678901234"
          },
          "hireDate": {
            "type": "string",
            "description": "Date when the employee was hired",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "description": "Employee entity"
      },
      "CalculationTable": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "amount": {
            "type": "number",
            "description": "The amount of calculation",
            "format": "double",
            "example": 5000.0
          },
          "rate": {
            "type": "number",
            "description": "The rate used for the calculation",
            "format": "double",
            "example": 10.5
          },
          "date": {
            "type": "string",
            "description": "The date of the calculation",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "calculationType": {
            "type": "string",
            "description": "The type of the calculation",
            "example": "SALARY"
          }
        },
        "description": "CalculationTable entity"
      }
    }
  }
}